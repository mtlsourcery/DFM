** DEVELOPER NOTES AND TODO LIST **
	
Intended code structure summary (as of 14 March, 2018): 
	Windows Form (MainForm) to handle user input. Backend handles user input and
	and has two primary functions: 1) Convert user-selected data files into 
	objects (via DataObject class) whose attributes can then be manipulated in a
	general way regardless of the original file extension, 2) combine the data
	in a way predetermined by user input (e.g. via CheckBoxes).

--------------------------------------------------------------------------------
Dailyish Notes
26 March, 2018 - 
	Currently getting "Index and length must refer to an
	index within the string" error, System.ArgumentOutOfRangeException in 
	mscorlib.dll. 

	DataObject.GetDataMatrix: Foreach body in a try/catch statement. Process
	Output button w/ selected file opens FilePreviewForm w/ no text. Subsequent
	attempts yeild "Stream unreadable" messages. 

20 March, 2018 - 
	Adding/removing files functionality works as intended. Files can
	now be previewed as readonly in a seperate Windows Form.
19 March, 2018 - 
	The Remove Files button is not working, at least not enough to 
	remove the selected items in FileListBox. Need to fix this. 
14 March, 2018 - 
	First draft of GUI layout completed. Several non-functional 
	controls are placed just to give an idea of the desired final product. 
	Working on DataObject class to handle a few different types of data file
	formats (.csv, .txt, .rtf, and .xlsx for now). 

--------------------------------------------------------------------------------
To-Do List:
- Add functionality to DataObject class to look for columns of data in selected
	files.

--------------------------------------------------------------------------------
Maybe-Do List:
- Remove the Data File Type ComboBox. When file-specific plotting is done, it 
	may not be necessary to flag files as "XRF", "FWS", etc.
- Display error messages with a specialized form (not MessageBox) whose 
	background is a cat image or gif pulled from an API. 
- Store file text rather than its Stream in the dictionary myFiles.

--------------------------------------------------------------------------------
Did List:
- Add Messages to alert user of improper use of controls, e.g. clicking 
	RemoveFileButton without selecting any files to remove.
- Add functionality to PreviewFileButton
- Make FilesTextBox and SaveDirTextBox read-only.
- Replaced FilesTextBox with FileListBox
- Fixed RemoveFileButton
- Utilize a dictionary or custom class to create list of tuples of filenames and
	their associated read-only Streams. 
- Generalize file input to accept any number of files, whether via group
	selection or otherwise. DO BEFORE THINGS GET TOO MESSY.
- Add "Preview" button to the GUI for viewing selected files before processing.