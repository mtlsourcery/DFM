** DEVELOPER NOTES AND TODO LIST **
	
Intended code structure summary (as of 14 March, 2018): 
	Windows Form (MainForm) to handle user input. Backend handles user input and
	and has two primary functions: 1) Convert user-selected data files into 
	objects (via DataObject class) whose attributes can then be manipulated in a
	general way regardless of the original file extension, 2) combine the data
	in a way predetermined by user input (e.g. via CheckBox options).

--------------------------------------------------------------------------------
Dailyish Notes
11 April, 2018 - 
	Remove files button runs into an indexing error if more than two objects
	selected. Presumably this happens in the foreach statement. 
9 April, 2018 - 
	DataObject.FileString no longer returns an empty string. The file stream has
	to be reset via the Position property before being read, if it has been read
	previously.
5 April, 2018 -
	DataObject.FileString is returning an empty string. 
3 April, 2018 - 
	Layout of ErrorHandlingForm tuned, and method msgHandler.ShowException
	added. 

	Edit TwoButtonForm to have a second button which affirms some action. May
	need to use some sort of delegate to pass selection to function that called
	it. Look into this tomorrow. 
2 April, 2018 - 
	ErrorHandling form will need to be instantiated everytime we launch one;
	Disposing of the shown form destroys the object. Options: 1) instantiate an 
	ErrorHandlingForm when we want one, and just one image is pulled for the 
	occasion; 2) Change the error handling class to not extend Form. Just create
	a new Form in the ShowMessage method. Can leave ErrorHandlingForm as the 
	class that creates our form. Edit constructor to take image and message
	as arguments. 

	Image rendering in msgHandler is now working as intended.
28 March, 2018 - 
	DataObject.GetDataMatrix is now behaving as expected for the test file 
	DFM_DataTest.txt.

	Figure out how to properly extract an image from a data stream in error
	handling form.
28 March, 2018 -
	DataObject.GetDataMatrix now groups layers according to delimiters/line. 
	The current method of cloning/storing/clearing the cellMatrix2D may lead to
	vacant layers in cellMatrix3D though. 

	First layer becomes split after first line when maxDelimiters exceeds zero;
	groups are created with an offset of one line; e.g. each test paragraph gets
	split up so the first line of a paragraph is the last line of a group.
27 March, 2018 -
	DataObject.GetDataMatrix now correctly grabs the cells from the test file;
	can enhance this for more complicated files in the future. 

	Error in DataObject.GetDataMatrix clearing dataMatrix2D rows after appending
	rows is now fixed. Moral: List.Add(x) points to x, rather than a copy. So if 
	x is cleared, so that container in List is also emptied. DON'T DO THIS.
26 March, 2018 - 
	Currently getting "Index and length must refer to an
	index within the string" error, System.ArgumentOutOfRangeException in 
	mscorlib.dll. 

	DataObject.GetDataMatrix: Foreach body in a try/catch statement. Process
	Output button w/ selected file opens FilePreviewForm w/ no text. Subsequent
	attempts yeild "Stream unreadable" messages. 
20 March, 2018 - 
	Adding/removing files functionality works as intended. Files can
	now be previewed as readonly in a seperate Windows Form.
19 March, 2018 - 
	The Remove Files button is not working, at least not enough to 
	remove the selected items in FileListBox. Need to fix this. 
14 March, 2018 - 
	First draft of GUI layout completed. Several non-functional 
	controls are placed just to give an idea of the desired final product. 
	Working on DataObject class to handle a few different types of data file
	formats (.csv, .txt, .rtf, and .xlsx for now). 

--------------------------------------------------------------------------------
To-Do List:
- Display random pulling of catgifs... Just use grumpy cat image or no image for
	exception messages. Or an "Oops!" image.
- Find a way to bind the dataObject created in AddFileButton_Click to a label
	in DataListBox representing the data columns. This shouldn't involve a lot 
	of string parsing and dependencies...
- Add a way to view the primary outputs (cellmatrix, columns, etc) of files 
	converted to dataObjects. This could be a ListBox that shows previewable/
	saveable items such as 'exampledata.txt - columns'. Could add double click
	method for opening data columns as text or in a table for viewing/readonly.
- If initial directory is not found when attempting to browse files, pop open a
	dialogue asking for a new default directory (could store this in an ini 
	file eventually).
- Add option to omit data rows for which at least one cell is empty. E.g. the 
	row (Milk,2.50,,Target) would be omitted from your shopping list table. This
	way, there will be no vacant cells.

--------------------------------------------------------------------------------
Maybe-Do List:
- Do away with storing files in dictionary myFiles. Can store all of the needed
	file data in the static list ObjectsList in DataObjects.
- Add a SettingsForm to allow changing of settings. 
- Add a toolbar at the top of MainForm to allow selection of options like 'help'
	and 'settings'.
- Add option to save file in PreviewFileForm.
- Find a different cat image api... maybe a gif-only api. There are occasional
	questionable images (nothing obscene, just a bit odd) that pop up in the 
	current database.
- Implement a function output the source of an exception and its message to the 
	VS console. Throw this in several functions?

--------------------------------------------------------------------------------
Did List:
10 April, 2018 - Added static list to DataObjects to store instances. This list
	is used instead of myFiles, which is now obselete and can be deleted.
5 April, 2018 - Find a way to bind DataObjects to the dictionary. myFiles is now
	of type Dictionary<string,DataObject> instead of Dictionary<string,Stream>.
	- Add functionality to DataObject class to look for columns of data in 
	selected files.
	- Remove the Data File Type ComboBox. When file-specific plotting is done, 
	it may not be necessary to flag files as "XRF", "FWS", etc.
4 April, 2018 - Generalize the msgHandler class to handle other types of 
	messages too: user choice prompts, etc.
	- Store settings such as save directory and browsing directory in Setting 
	file. These can be changed during run-time and read at start-up.
3 April, 2018 - Get label and button to display under image on 
	ErrorHandlingForm.
2 April, 2018 - Pull a new image each time msgHandler.ShowMessage() is called, 
	rather than grab one at random from a pre-pulled list of urls. 
	- msgHandler pulls cat images from API XML data and displays a
	randomly selected image in the error pop up, ErrorHandlingForm.
	- Display error messages with a specialized form (not MessageBox) whose 
	background is a cat image or gif pulled from an API. 
29 March, 2018 - Find and return largest group of lines in 
	DataObject.GetDataLines. Could avoid maybe avoid calling 
	StringFromMatrixLines foreach 2D matrix in 3D matrix.
28 March, 2018 - Modify DataObject.GetDataMatrix to make different groups of 
	lines based on delimiters per line. 
27 March, 2018 - 
	DataObject.DataString and functions leading up to it are fixed
(Before 28 March 2018:)
- Add Messages to alert user of improper use of controls, e.g. clicking 
	RemoveFileButton without selecting any files to remove.
- Add functionality to PreviewFileButton
- Make FilesTextBox and SaveDirTextBox read-only.
- Replaced FilesTextBox with FileListBox
- Fixed RemoveFileButton
- Utilize a dictionary or custom class to create list of tuples of filenames 
	and their associated read-only Streams. 
- Generalize file input to accept any number of files, whether via group
	selection or otherwise. DO BEFORE THINGS GET TOO MESSY.
- Add "Preview" button to the GUI for viewing selected files before 
	processing.